[
  {
    "id": "WOQLClient()",
    "longname": "WOQLClient",
    "name": "WOQLClient",
    "kind": "constructor",
    "description": "The core functionality of the TerminusDB javascript client is defined in the WOQLClient class - in the woqlClient.js file.\nThis class provides methods which allow you to directly get and set all of the configuration and API endpoints of the client.\nThe other parts of the WOQL core - connectionConfig.js and connectionCapabilities.js - are used by the client to store internal state - they should never have to be accessed directly.\nFor situations where you want to communicate with a TerminusDB server API, the WOQLClient class is all you will need.",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the terminusdb server url",
        "name": "serverUrl"
      },
      {
        "type": {
          "names": [
            "typedef.ParamsObj"
          ]
        },
        "optional": true,
        "description": "an object with the connection parameters",
        "name": "params"
      }
    ],
    "examples": [
      "const client = new TerminusClient.Client(SERVER_URL)\nawait client.connect(params)\nclient.db(\"test\")\nclient.checkout(\"dev\")\nconst turtle = await client.getTriples(\"schema\", \"main\")\n//The client has an internal state which defines what \n//organization / database / repository / branch / ref it is currently attached to"
    ],
    "order": 1
  },
  {
    "id": "WOQLClient",
    "longname": "WOQLClient",
    "name": "WOQLClient",
    "kind": "class",
    "scope": "global",
    "license": "Apache Version 2",
    "meta": {
      "lineno": 11,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 0
  },
  {
    "id": "TerminusDB Client API",
    "label": "TerminusDB Client API",
    "longname": "TerminusDBClientAPI",
    "description": "",
    "name": "terminusdbclientapi",
    "kind": "group",
    "scope": "global",
    "memberof": "WOQLClient",
    "meta": {
      "lineno": 38,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 3
  },
  {
    "id": "WOQLClient#connect",
    "longname": "WOQLClient#connect",
    "name": "connect",
    "kind": "function",
    "scope": "instance",
    "description": "Connect to a Terminus server at the given URI with an API key\nStores the system:ServerCapability document returned\nin the connection register which stores, the url, key, capabilities,\nand database meta-data for the connected server\nthis.connectionConfig.server will be used if present,\nor the promise will be rejected.",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.ParamsObj"
          ]
        },
        "optional": true,
        "description": "TerminusDB Server connection parameters",
        "name": "params"
      }
    ],
    "examples": [
      "client.connect({key=\"mykey\",user=\"admin\"})"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "the connection capabilities response object or an error object"
      }
    ],
    "meta": {
      "lineno": 320,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 25,
    "label": "Connect"
  },
  {
    "id": "WOQLClient#createDatabase",
    "longname": "WOQLClient#createDatabase",
    "name": "createDatabase",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new database in TerminusDB server",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The id of the new database to be created",
        "name": "dbId"
      },
      {
        "type": {
          "names": [
            "typedef.DbDetails"
          ]
        },
        "description": "object containing details about the database to be created:",
        "name": "dbDetails"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "optional organization id - if absent default local organization id is used",
        "name": "orgId"
      }
    ],
    "examples": [
      "//remember set schema:true if you need to add a schema graph\nclient.createDatabase(\"mydb\", {label: \"My Database\", comment: \"Testing\", schema: true})"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 346,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 26,
    "label": "Create Database"
  },
  {
    "id": "WOQLClient#deleteDatabase",
    "longname": "WOQLClient#deleteDatabase",
    "name": "deleteDatabase",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a database from a TerminusDB server",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The id of the database to be deleted",
        "name": "dbId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the id of the organization to which the database belongs (in desktop use, this will always be “admin”)",
        "name": "orgId"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "name": "force"
      }
    ],
    "examples": [
      "client.deleteDatabase(\"mydb\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 369,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 27,
    "label": "Delete Database"
  },
  {
    "id": "WOQLClient#createGraph",
    "longname": "WOQLClient#createGraph",
    "name": "createGraph",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new named graph within a TerminusDB database",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.GraphType"
          ]
        },
        "description": "type of graph",
        "name": "graphType"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "id of the graph to be created",
        "name": "graphId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "a message describing the reason for the change that will be written into the commit log",
        "name": "commitMsg"
      }
    ],
    "examples": [
      "client.createGraph(\"schema\", \"alt\", \"Adding new schema graph\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 391,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 28,
    "label": "Create Graph"
  },
  {
    "id": "WOQLClient#deleteGraph",
    "longname": "WOQLClient#deleteGraph",
    "name": "deleteGraph",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a graph from a TerminusDB database",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.GraphType"
          ]
        },
        "description": "type of graph",
        "name": "graphType"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "local id of graph",
        "name": "graphId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "a message describing the reason for the change that will be written into the commit log",
        "name": "commitMsg"
      }
    ],
    "examples": [
      "client.deleteGraph(\"schema\", \"alt\", \"Deleting alt schema graph\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 420,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 29,
    "label": "Delete Graph"
  },
  {
    "id": "WOQLClient#getTriples",
    "longname": "WOQLClient#getTriples",
    "name": "getTriples",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieve the contents of a graph within a TerminusDB as triples, encoded in the turtle (ttl) format",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.GraphType"
          ]
        },
        "description": "type of graph to get triples from, either “instance”, “schema” or “inference”",
        "name": "graphType"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "TerminusDB Graph name",
        "name": "graphId"
      }
    ],
    "examples": [
      "const turtle = await client.getTriples(\"schema\", \"alt\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object (with the contents being a string representing a set of triples in turtle (ttl) format), or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 443,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 30,
    "label": "Get Triples"
  },
  {
    "id": "WOQLClient#updateTriples",
    "longname": "WOQLClient#updateTriples",
    "name": "updateTriples",
    "kind": "function",
    "scope": "instance",
    "description": "Replace the contents of the specified graph with the passed triples encoded in the turtle (ttl) format",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "type of graph  |instance|schema|inference|",
        "name": "graphType"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "TerminusDB Graph ID",
        "name": "graphId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "string encoding triples in turtle (ttl) format",
        "name": "turtle"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Textual message describing the reason for the update",
        "name": "commitMsg"
      }
    ],
    "examples": [
      "client.updateTriples(\"schema\", \"alt\", turtle_string, \"dumping triples to graph alt\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 466,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 31,
    "label": "Update Triples"
  },
  {
    "id": "WOQLClient#query",
    "longname": "WOQLClient#query",
    "name": "query",
    "kind": "function",
    "scope": "instance",
    "description": "Executes a WOQL query on the specified database and returns the results",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "WOQLQuery"
          ]
        },
        "description": "an instance of the WOQLQuery class",
        "name": "woql"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "a message describing the reason for the change that will be written into the commit log (only relevant if the query contains an update)",
        "name": "commitMsg"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "name": "allWitnesses"
      }
    ],
    "examples": [
      "const result = await client.query(WOQL.star())"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 647,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 40,
    "label": "Query"
  },
  {
    "id": "WOQLClient#clonedb",
    "longname": "WOQLClient#clonedb",
    "name": "clonedb",
    "kind": "function",
    "scope": "instance",
    "description": "Clones a remote repo and creates a local copy",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.CloneSourceDetails"
          ]
        },
        "description": "object describing the source branch to be used as a base",
        "name": "cloneSource"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "id of the new cloned database on the local server",
        "name": "newDbId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "id of the local organization that the new cloned database will be created in (in desktop mode this is always “admin”)",
        "name": "orgId"
      }
    ],
    "examples": [
      "client.clonedb({remote_url: \"https://my.terminusdb.com/myorg/mydb\", label \"Cloned DB\", comment: \"Cloned from mydb\"}, newid: \"mydb\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 844,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 51,
    "label": "Clonedb"
  },
  {
    "id": "WOQLClient#branch",
    "longname": "WOQLClient#branch",
    "name": "branch",
    "kind": "function",
    "scope": "instance",
    "description": "Creates a new branch with a TerminusDB database, starting from the current context of the client (branch / ref)",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "local identifier of the new branch the ID of the new branch to be created",
        "name": "newBranchId"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "description": "if the query contains any updates, it should include a textual message describing the reason for the update",
        "name": "sourceFree"
      }
    ],
    "examples": [
      "client.branch(\"dev\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 678,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 41,
    "label": "Branch"
  },
  {
    "id": "WOQLClient#rebase",
    "longname": "WOQLClient#rebase",
    "name": "rebase",
    "kind": "function",
    "scope": "instance",
    "description": "Merges the passed branch into the current one using the rebase operation",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "json describing the source branch to be used as a base",
        "name": "rebaseSource"
      }
    ],
    "examples": [
      "//from the branch head\nclient.rebase({rebase_from: \"admin/db_name/local/branch/branch_name\", message: \"Merging from dev\")\n//or from a commit id\nclient.rebase({rebase_from: \"admin/db_name/local/commit/9w8hk3y6rb8tjdy961de3i536ntkqd8\", message: \"Merging from dev\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 812,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 49,
    "label": "Rebase"
  },
  {
    "id": "WOQLClient#pull",
    "longname": "WOQLClient#pull",
    "name": "pull",
    "kind": "function",
    "scope": "instance",
    "description": "Pull changes from a branch on a remote database to a branch on a local database",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.RemoteRepoDetails"
          ]
        },
        "description": "an object describing the source of the pull",
        "name": "remoteSourceRepo"
      }
    ],
    "examples": [
      "client.pull({remote: \"origin\", remote_branch: \"main\", message: \"Pulling from remote\"})"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 767,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 46,
    "label": "Pull"
  },
  {
    "id": "WOQLClient#push",
    "longname": "WOQLClient#push",
    "name": "push",
    "kind": "function",
    "scope": "instance",
    "description": "Push changes from a branch on a local database to a branch on a remote database",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.RemoteRepoDetails"
          ]
        },
        "description": "an object describing the target of the push\n{remote: \"origin\", \"remote_branch\": \"main\", \"author\": \"admin\", \"message\": \"message\"}",
        "name": "remoteTargetRepo"
      }
    ],
    "examples": [
      "client.push({remote: \"origin\", remote_branch: \"main\", message: \"Pulling from remote\"})"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 793,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 48,
    "label": "Push"
  },
  {
    "id": "WOQLClient#fetch",
    "longname": "WOQLClient#fetch",
    "name": "fetch",
    "kind": "function",
    "scope": "instance",
    "description": "Fetch updates to a remote database to a remote repository with the local database",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "if of the remote to fetch (eg: 'origin')",
        "name": "remoteId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 781,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 47,
    "label": "Fetch"
  },
  {
    "id": "WOQLClient#insertCSV",
    "longname": "WOQLClient#insertCSV",
    "name": "insertCSV",
    "kind": "function",
    "scope": "instance",
    "description": "Inserts a csv from a specified path",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "is an array of csv file names with file path",
        "name": "csvPathList"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Textual message describing the reason for the update",
        "name": "commitMsg"
      }
    ],
    "examples": [
      "const filePath = [\"C:/Users/User Name/Documents/example.csv\"]\nclient.insertCSV(filePath, \"inserting a CSV file\", \"instance\", \"main\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 516,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 33,
    "label": "Insert CSV"
  },
  {
    "id": "WOQLClient#getCSV",
    "longname": "WOQLClient#getCSV",
    "name": "getCSV",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves the contents of the specified graph as a CSV",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of csv to dump from the specified database to extract",
        "name": "csvName"
      }
    ],
    "examples": [
      "const name = [\"example.csv\"]\nclient.getCSV(name, true, \"instance\", \"main\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "An API success message"
      }
    ],
    "meta": {
      "lineno": 567,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 35,
    "label": "Get CSV"
  },
  {
    "id": "WOQLClient#updateCSV",
    "longname": "WOQLClient#updateCSV",
    "name": "updateCSV",
    "kind": "function",
    "scope": "instance",
    "description": "Updates the contents of the specified path with a csv, creating the appropriate\ndiff object as the commit.",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "Array csvs to upload",
        "name": "csvPathList"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Textual message describing the reason for the update",
        "name": "commitMsg"
      }
    ],
    "examples": [
      "const filePath = [{fileToBeUpdated: \"File.csv\", updateWith: \"C:/Users/User Name/Documents/example.csv\"}]\nclient.updateCSV(filePath, \"updating a CSV file\", \"instance\", \"main\")\n// Here fileToBeUpdated is the CSV in TerminusDB which we are going to update. updateWith includes the file path of the CSV whose contents is going to be updated to fileToBeUpdated. Note that during an Update CSV only\n//the diffs are considered and are updated which makes update of big files more efficient."
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 547,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 34,
    "label": "Update CSV"
  },
  {
    "id": "WOQLClient#deleteCSV",
    "longname": "WOQLClient#deleteCSV",
    "name": "deleteCSV",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes CSV from your database",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "is an array of csv file names",
        "name": "csvName"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Textual message describing the reason for the delete",
        "name": "commitMsg"
      }
    ],
    "examples": [
      "const name = [\"example.csv\"]\nclient.deleteCSV(name, \"deleting CSV\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "the rest api call results"
      }
    ],
    "meta": {
      "lineno": 583,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 36,
    "label": "Delete CSV"
  },
  {
    "id": "WOQLClient#get_database",
    "longname": "WOQLClient#get_database",
    "name": "get_database",
    "kind": "member",
    "scope": "instance",
    "description": "Use {@link #databaseInfo} instead",
    "memberof": "WOQLClient",
    "deprecated": true,
    "meta": {
      "lineno": 152,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 11
  },
  {
    "id": "WOQLClient#set_system_db",
    "longname": "WOQLClient#set_system_db",
    "name": "set_system_db",
    "kind": "member",
    "scope": "instance",
    "description": "Use {@link #setSystemDb} instead.",
    "memberof": "WOQLClient",
    "deprecated": true,
    "meta": {
      "lineno": 180,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 14
  },
  {
    "id": "WOQLClient#local_auth",
    "longname": "WOQLClient#local_auth",
    "name": "local_auth",
    "kind": "member",
    "scope": "instance",
    "description": "Use {@link #localAuth} instead.",
    "memberof": "WOQLClient",
    "deprecated": true,
    "meta": {
      "lineno": 241,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 19
  },
  {
    "id": "WOQLClient#remote_auth",
    "longname": "WOQLClient#remote_auth",
    "name": "remote_auth",
    "kind": "member",
    "scope": "instance",
    "description": "Use {@link #remoteAuth} instead.",
    "memberof": "WOQLClient",
    "deprecated": true,
    "meta": {
      "lineno": 262,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 21
  },
  {
    "id": "WOQLClient#copy",
    "longname": "WOQLClient#copy",
    "name": "copy",
    "kind": "function",
    "scope": "instance",
    "description": "creates a copy of the client with identical internal state and context\nuseful if we want to change context for a particular API call without changing\nthe current client context",
    "memberof": "WOQLClient",
    "examples": [
      "let newClient = client.copy()"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "WOQLClient"
          ]
        },
        "description": "new client object with identical state to original but which can be manipulated independently"
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 2
  },
  {
    "id": "WOQLClient#server",
    "longname": "WOQLClient#server",
    "name": "server",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the current connected server url\nit can only be set creating a new WOQLCLient instance",
    "memberof": "WOQLClient",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 61,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 3
  },
  {
    "id": "WOQLClient#api",
    "longname": "WOQLClient#api",
    "name": "api",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieve the URL of the server’s API base that we are currently connected to",
    "memberof": "WOQLClient",
    "examples": [
      "let api_url = client.api()"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the URL of the TerminusDB server api endpoint we are connected to (typically server() + “api/”)"
      }
    ],
    "meta": {
      "lineno": 71,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 4
  },
  {
    "id": "WOQLClient#organization",
    "longname": "WOQLClient#organization",
    "name": "organization",
    "kind": "function",
    "scope": "instance",
    "description": "Gets/Sets the client’s internal organization context value",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string",
            "boolean"
          ]
        },
        "optional": true,
        "description": "the organization id to set the context to",
        "name": "orgId"
      }
    ],
    "examples": [
      "client.organization(\"admin\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string",
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 82,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 5
  },
  {
    "id": "WOQLClient#user",
    "longname": "WOQLClient#user",
    "name": "user",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the current user object as returned by the connect capabilities response\nuser has fields: [id, name, notes, author]",
    "memberof": "WOQLClient",
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 94,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 6
  },
  {
    "id": "WOQLClient#uid",
    "longname": "WOQLClient#uid",
    "name": "uid",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieve the id of the user that is logged in with the client",
    "memberof": "WOQLClient",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the id of the current user (always ‘admin’ for desktop client)"
      }
    ],
    "meta": {
      "lineno": 103,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 7
  },
  {
    "id": "WOQLClient#userOrganization",
    "longname": "WOQLClient#userOrganization",
    "name": "userOrganization",
    "kind": "function",
    "scope": "instance",
    "memberof": "WOQLClient",
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the user organization name"
      }
    ],
    "customTags": [
      {
        "tag": "desription",
        "value": "Gets the user's organization id"
      }
    ],
    "meta": {
      "lineno": 113,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 8
  },
  {
    "id": "WOQLClient#databases",
    "longname": "WOQLClient#databases",
    "name": "databases",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a list of databases (id, organization, label, comment) that the current user has access to on the server. Note that this requires the client to call connect() first.",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "optional": true,
        "description": "a list of databases the user has access to on the server, each having:",
        "name": "dbList"
      }
    ],
    "examples": [
      "const my_dbs = client.databases()"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "the user databases list"
      }
    ],
    "meta": {
      "lineno": 129,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 9
  },
  {
    "id": "WOQLClient#databaseInfo",
    "longname": "WOQLClient#databaseInfo",
    "name": "databaseInfo",
    "kind": "function",
    "scope": "instance",
    "description": "Gets the database's details",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the datbase id",
        "name": "dbId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the database organization",
        "name": "orgId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "the database description object //getDatabaseInfo"
      }
    ],
    "meta": {
      "lineno": 140,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 10
  },
  {
    "id": "WOQLClient#db",
    "longname": "WOQLClient#db",
    "name": "db",
    "kind": "function",
    "scope": "instance",
    "description": "Sets / Gets the current database",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the database id to set the context to",
        "name": "dbId"
      }
    ],
    "examples": [
      "client.db(\"mydb\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string",
            "boolean"
          ]
        },
        "description": "- the current database or false"
      }
    ],
    "meta": {
      "lineno": 161,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 12
  },
  {
    "id": "WOQLClient#setSystemDb",
    "longname": "WOQLClient#setSystemDb",
    "name": "setSystemDb",
    "kind": "function",
    "scope": "instance",
    "description": "Sets the internal client context to allow it to talk to the server’s internal system database",
    "memberof": "WOQLClient",
    "meta": {
      "lineno": 172,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 13
  },
  {
    "id": "WOQLClient#repo",
    "longname": "WOQLClient#repo",
    "name": "repo",
    "kind": "function",
    "scope": "instance",
    "description": "Gets / Sets the client’s internal repository context value (defaults to ‘local’)",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.RepoType",
            "string"
          ]
        },
        "optional": true,
        "description": "default value is local",
        "name": "repoId"
      }
    ],
    "examples": [
      "client.repo(\"origin\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the current repository id within the client context"
      }
    ],
    "meta": {
      "lineno": 189,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 15
  },
  {
    "id": "WOQLClient#checkout",
    "longname": "WOQLClient#checkout",
    "name": "checkout",
    "kind": "function",
    "scope": "instance",
    "description": "Gets/Sets the client’s internal branch context value (defaults to ‘main’)",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the branch id to set the context to",
        "name": "branchId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the current branch id within the client context"
      }
    ],
    "meta": {
      "lineno": 201,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 16
  },
  {
    "id": "WOQLClient#ref",
    "longname": "WOQLClient#ref",
    "name": "ref",
    "kind": "function",
    "scope": "instance",
    "description": "Sets / gets the current ref pointer (pointer to a commit within a branch)\nReference ID or Commit ID are unique hashes that are created whenever a new commit is recorded",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the reference ID or commit ID",
        "name": "commitId"
      }
    ],
    "examples": [
      "client.ref(\"mkz98k2h3j8cqjwi3wxxzuyn7cr6cw7\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string",
            "boolean"
          ]
        },
        "description": "the current commit id within the client context"
      }
    ],
    "meta": {
      "lineno": 216,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 17
  },
  {
    "id": "WOQLClient#localAuth",
    "longname": "WOQLClient#localAuth",
    "name": "localAuth",
    "kind": "function",
    "scope": "instance",
    "description": "Sets/Gets set the database basic connection credential",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.CredentialObj"
          ]
        },
        "optional": true,
        "name": "newCredential"
      }
    ],
    "examples": [
      "client.localAuth({user:\"admin\",\"key\":\"mykey\",\"type\":\"basic\"})"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "typedef.CredentialObj",
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 230,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 18
  },
  {
    "id": "WOQLClient#remoteAuth",
    "longname": "WOQLClient#remoteAuth",
    "name": "remoteAuth",
    "kind": "function",
    "scope": "instance",
    "description": "Sets/Gets the jwt token for authentication",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.CredentialObj"
          ]
        },
        "optional": true,
        "name": "newCredential"
      }
    ],
    "examples": [
      "client.localAuth({\"key\":\"dhfmnmjglkrelgkptohkn\",\"type\":\"jwt\"})"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "typedef.CredentialObj",
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 250,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 20
  },
  {
    "id": "WOQLClient#author",
    "longname": "WOQLClient#author",
    "name": "author",
    "kind": "function",
    "scope": "instance",
    "description": "Gets/Sets the string that will be written into the commit log for the current user",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the id to write into commit logs as the author string (normally an email address)",
        "name": "aName"
      }
    ],
    "examples": [
      "client.author(\"my@myemail.com\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the current author id in use for the current user"
      }
    ],
    "meta": {
      "lineno": 271,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 22
  },
  {
    "id": "WOQLClient#set",
    "longname": "WOQLClient#set",
    "name": "set",
    "kind": "function",
    "scope": "instance",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.ParamsObj"
          ]
        },
        "description": "a object with connection params",
        "name": "params"
      }
    ],
    "examples": [
      "sets several of the internal state values in a single call (similar to connect, but only sets internal client state, does not communicate with server)\nclient.set({key: \"mypass\", branch: \"dev\", repo: \"origin\"})"
    ],
    "meta": {
      "lineno": 283,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 23
  },
  {
    "id": "WOQLClient#resource",
    "longname": "WOQLClient#resource",
    "name": "resource",
    "kind": "function",
    "scope": "instance",
    "description": "Generates a resource string for the required context\nof the current context for \"commits\" \"meta\" \"branch\" and \"ref\" special resources",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.ResourceType"
          ]
        },
        "description": "the type of resource string that is required - one of “db”, “meta”, “repo”, “commits”, “branch”, “ref”",
        "name": "resourceType"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "can be used to specify a specific branch / ref - if not supplied the current context will be used",
        "name": "resourceId"
      }
    ],
    "examples": [
      "const branch_resource = client.resource(\"branch\")"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "a resource string for the desired context"
      }
    ],
    "meta": {
      "lineno": 296,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 24
  },
  {
    "id": "WOQLClient#insertTriples",
    "longname": "WOQLClient#insertTriples",
    "name": "insertTriples",
    "kind": "function",
    "scope": "instance",
    "description": "Appends the passed turtle to the contents of a graph",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "type of graph  |instance|schema|inference|",
        "name": "graphType"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "TerminusDB Graph ID to update, main is the default value",
        "name": "graphId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "is a valid set of triples in turtle format (OWL)",
        "name": "turtle"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Textual message describing the reason for the update",
        "name": "commitMsg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 490,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 32
  },
  {
    "id": "WOQLClient#message",
    "longname": "WOQLClient#message",
    "name": "message",
    "kind": "function",
    "scope": "instance",
    "description": "Sends a message to the server",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "textual string",
        "name": "message"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "a server path to send the message to",
        "name": "pathname"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 604,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 37
  },
  {
    "id": "WOQLClient#action",
    "longname": "WOQLClient#action",
    "name": "action",
    "kind": "function",
    "scope": "instance",
    "description": "Sends an action to the server",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "structure of the action",
        "name": "actionName"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "a request body call",
        "name": "payload"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 618,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 38
  },
  {
    "id": "WOQLClient#info",
    "longname": "WOQLClient#info",
    "name": "info",
    "kind": "function",
    "scope": "instance",
    "description": "Gets TerminusDB Server Information",
    "memberof": "WOQLClient",
    "examples": [
      "client.info()"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 631,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 39
  },
  {
    "id": "WOQLClient#squashBranch",
    "longname": "WOQLClient#squashBranch",
    "name": "squashBranch",
    "kind": "function",
    "scope": "instance",
    "description": "Squash branch commits",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "local identifier of the new branch",
        "name": "branchId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Textual message describing the reason for the update",
        "name": "commitMsg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 702,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 42
  },
  {
    "id": "WOQLClient#resetBranch",
    "longname": "WOQLClient#resetBranch",
    "name": "resetBranch",
    "kind": "function",
    "scope": "instance",
    "description": "Reset branch to a commit id, Reference ID or Commit ID are unique hashes that are created whenever a new commit is recorded",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "local identifier of the new branch",
        "name": "branchId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Reference ID or Commit ID",
        "name": "commitId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 723,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 43
  },
  {
    "id": "WOQLClient#optimizeBranch",
    "longname": "WOQLClient#optimizeBranch",
    "name": "optimizeBranch",
    "kind": "function",
    "scope": "instance",
    "description": "Optimize db branch",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "local identifier of the new branch",
        "name": "branchId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 743,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 44
  },
  {
    "id": "WOQLClient#deleteBranch",
    "longname": "WOQLClient#deleteBranch",
    "name": "deleteBranch",
    "kind": "function",
    "scope": "instance",
    "description": "Deletes a branch from database",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "local identifier of the branch",
        "name": "branchId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 752,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 45
  },
  {
    "id": "WOQLClient#reset",
    "longname": "WOQLClient#reset",
    "name": "reset",
    "kind": "function",
    "scope": "instance",
    "description": "Reset the current branch HEAD to the specified commit path",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The commit path to set the current branch to",
        "name": "commitPath"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 829,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 50
  },
  {
    "id": "WOQLClient#dispatch",
    "longname": "WOQLClient#dispatch",
    "name": "dispatch",
    "kind": "function",
    "scope": "instance",
    "description": "Common request dispatch function",
    "memberof": "WOQLClient",
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the action name",
        "name": "action"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the server call endpoint",
        "name": "apiUrl"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "the post body",
        "name": "payload"
      }
    ],
    "meta": {
      "lineno": 862,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 52
  },
  {
    "id": "WOQLClient#generateCommitInfo",
    "longname": "WOQLClient#generateCommitInfo",
    "name": "generateCommitInfo",
    "kind": "function",
    "scope": "instance",
    "description": "Generates the json structure for commit messages",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "textual string describing reason for the change",
        "name": "msg"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "optional author id string - if absent current user id will be used",
        "name": "author"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "object"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 882,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 53
  },
  {
    "id": "WOQLClient#generateCommitDescriptor",
    "longname": "WOQLClient#generateCommitDescriptor",
    "name": "generateCommitDescriptor",
    "kind": "function",
    "scope": "instance",
    "description": "Generates the json structure for commit descriptor",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "a valid commit id o",
        "name": "commitId"
      }
    ],
    "meta": {
      "lineno": 894,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 54
  },
  {
    "id": "WOQLClient#prepareRevisionControlArgs",
    "longname": "WOQLClient#prepareRevisionControlArgs",
    "name": "prepareRevisionControlArgs",
    "kind": "function",
    "scope": "instance",
    "description": "Adds an author string (from the user object returned by connect) to the commit message.",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "name": "rc_args"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "object",
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 905,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 55
  },
  {
    "id": "WOQLClient#_load_db_prefixes",
    "longname": "WOQLClient#_load_db_prefixes",
    "name": "_load_db_prefixes",
    "kind": "function",
    "scope": "instance",
    "description": "Loads prefixes for each database connected to.\nadd the prefix at the connection database list",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "the user database list",
        "name": "dbs"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "- the list of the databases"
      }
    ],
    "meta": {
      "lineno": 917,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 56
  },
  {
    "id": "WOQLClient#getClassFrame",
    "longname": "WOQLClient#getClassFrame",
    "name": "getClassFrame",
    "kind": "function",
    "scope": "instance",
    "description": "Retrieves a class frame for the specified class",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "is the URL / ID of a document class that exists in the database schema",
        "name": "docType"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 964,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 57
  },
  {
    "id": "WOQLClient#updateDatabase",
    "longname": "WOQLClient#updateDatabase",
    "name": "updateDatabase",
    "kind": "function",
    "scope": "instance",
    "description": "update the database details",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "an object that describe the database details",
        "name": "dbDoc"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 997,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 58
  },
  {
    "id": "WOQLClient#organizations",
    "longname": "WOQLClient#organizations",
    "name": "organizations",
    "kind": "function",
    "scope": "instance",
    "description": "Gets/Sets the list of organizations that the user belongs to (has roles for)",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "array"
          ]
        },
        "description": "list of organization name",
        "name": "orgList"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 1020,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 59
  },
  {
    "id": "WOQLClient#action_permitted",
    "longname": "WOQLClient#action_permitted",
    "name": "action_permitted",
    "kind": "function",
    "scope": "instance",
    "description": "Check from the capabilities object if the action is permitted",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the action name",
        "name": "action"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the name of the resource (databaseName or organizationName)",
        "name": "resource"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 1033,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 60
  },
  {
    "id": "WOQLClient#createUser",
    "longname": "WOQLClient#createUser",
    "name": "createUser",
    "kind": "function",
    "scope": "instance",
    "description": "For creating an user",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the userId",
        "name": "userId"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "the user's object description",
        "name": "userDoc"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1050,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 61
  },
  {
    "id": "WOQLClient#getUser",
    "longname": "WOQLClient#getUser",
    "name": "getUser",
    "kind": "function",
    "scope": "instance",
    "description": "Get the logged user details.",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "userId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1066,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 62
  },
  {
    "id": "WOQLClient#updateUser",
    "longname": "WOQLClient#updateUser",
    "name": "updateUser",
    "kind": "function",
    "scope": "instance",
    "description": "Update an user from the database.",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "userId"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "User Object details",
        "name": "userDoc"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1077,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 63
  },
  {
    "id": "WOQLClient#deleteUser",
    "longname": "WOQLClient#deleteUser",
    "name": "deleteUser",
    "kind": "function",
    "scope": "instance",
    "description": "Delete an user from the database Only a user with DBA authority can delete a user.",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "userId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1093,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 64
  },
  {
    "id": "WOQLClient#createOrganization",
    "longname": "WOQLClient#createOrganization",
    "name": "createOrganization",
    "kind": "function",
    "scope": "instance",
    "description": "Create a new organization for the registered user",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the organization id",
        "name": "orgId"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "An object that describe the organization's details",
        "name": "orgDoc"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1110,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 65
  },
  {
    "id": "WOQLClient#getOrganization",
    "longname": "WOQLClient#getOrganization",
    "name": "getOrganization",
    "kind": "function",
    "scope": "instance",
    "description": "Gets all the information about the given organization",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the organization id",
        "name": "orgId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1130,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 66
  },
  {
    "id": "WOQLClient#updateOrganization",
    "longname": "WOQLClient#updateOrganization",
    "name": "updateOrganization",
    "kind": "function",
    "scope": "instance",
    "description": "only if you have the permission you can delete an organization\n Before you can delete the organization, you must first remove all accounts and databases\n from the organization",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the organization id",
        "name": "orgId"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "description": "the organization details description",
        "name": "orgDoc"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1143,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 67
  },
  {
    "id": "WOQLClient#deleteOrganization",
    "longname": "WOQLClient#deleteOrganization",
    "name": "deleteOrganization",
    "kind": "function",
    "scope": "instance",
    "description": "only if you have the permission you can delete an organization\n Before you can delete the organization, you must first remove all accounts and databases\n from the organization",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the organization id",
        "name": "orgId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1165,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 68
  },
  {
    "id": "WOQLClient#getRoles",
    "longname": "WOQLClient#getRoles",
    "name": "getRoles",
    "kind": "function",
    "scope": "instance",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "the user id",
        "name": "userId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the organization id",
        "name": "orgId"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "the dbId",
        "name": "dbId"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1184,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 69
  },
  {
    "id": "WOQLClient#updateRoles",
    "longname": "WOQLClient#updateRoles",
    "name": "updateRoles",
    "kind": "function",
    "scope": "instance",
    "description": "Change the user role for existing users in your organisation, including your own",
    "memberof": "WOQLClient",
    "params": [
      {
        "type": {
          "names": [
            "typedef.RolesObj"
          ]
        },
        "name": "newRolesObj"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "A promise that returns the call response object, or an Error if rejected."
      }
    ],
    "meta": {
      "lineno": 1204,
      "filename": "woqlClient.js",
      "path": "/var/www/html/terminusdb-client/lib"
    },
    "order": 70
  }
]